version: "3.8"
services:
  s3:
    image: minio/minio
    ports:
      - "9011:9001"
      - "9010:9000"
    volumes:
      - data:/data
    environment:
      MINIO_ROOT_USER: e7walulcatDu7waekVSk
      MINIO_ROOT_PASSWORD: PYiRFiqUljLFRdKvwnVQ
    command: server --address 0.0.0.0:9000 --console-address :9001 /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  s3-service:
    image: minio/mc
    depends_on:
      s3:
        condition: service_healthy
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set sama http://s3:9000 e7walulcatDu7waekVSk PYiRFiqUljLFRdKvwnVQ;
      /usr/bin/mc mb sama/samabucket;
      /usr/bin/mc policy set public sama/samabucket;
      "

  mongo:
    image: mongo:4.4
    container_name: server_mongo_database
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=samadb
    ports:
      - "27017:27017"

  redis:
    image: redis
    container_name: server_redis_database
    restart: always
    ports:
      - "6379:6379"

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

volumes:
  data:
